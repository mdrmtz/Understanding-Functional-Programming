Understanding Functional Programming
Venkat Subramaniam
Email: venkats@agiledeveloper.com
Twitter: @venkat_s
http://www.agiledeveloper.com download link

Getting started:

✓Poll 0

Part 1: Thinking in a functional style (45 minutes):
✓imperative
✓declarative
✓higher-order functions
✓functional == declarative + higher-order functional
✓thinking declaratively, as a series of transformations
✓Just like the contains function, look for (higher-order) functions that abstract operations
✓let's refactor some code
 ✓Please look at the readme.txt file under code/part1/lab
✓review and discussions
✓Poll 1

Part 2:Exploring functional APIs (40 minutes):
✓functional composition
✓filter
✓map
✓functional style == functional composition
✓functional programming == functional composition + lazy evaluation
✓reduce
✓collect
✓Collector's helpers in Collectors
✓let's refactor some code
✓review and discussions
✓Poll 2

Break (10 minutes):

Part 3:Complex higher-order functions (45 minutes):
✓Digging into Collectors further
✓recursive nature
✓let's refactor some code
✓review and discussions
✓Poll 3

Part 4:map versus flatMap (40 minutes):
✓map
✓one to one functions
✓one to many functions
✓flatten in other languages
✓map and flatten
✓let's refactor some code
✓review and discussions
✓Poll 4
